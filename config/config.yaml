# Roller Mill Vibration Prediction - Configuration File

# Project Settings
project:
  name: "roller-mill-vibration"
  version: "1.0.0"
  description: "Time series prediction for roller mill vibration"
  
# Data Settings  
data:
  raw_data_path: "full_data"
  processed_data_path: "data/processed"
  target_column: "CM2_PV_VRM01_VIBRATION"
  timestamp_column: "Timestamps"
  timestamp_format: "%d/%m/%Y %H:%M:%S"
  
  # Data filtering
  filter_vibration_range:
    min: 3.5
    max: 10.0
  
  # Data split ratios
  train_split: 0.75
  validation_split: 0.15
  test_split: 0.10
  
  # Testing configuration
  testing:
    enabled: true
    max_rows: 50000
  
  # Noisy data processing
  noise_reduction:
    enabled: true
    target_frequency: '5min'  # Aggregation frequency
    aggressive_filtering: false
    outlier_method: 'iqr'  # 'iqr', 'hampel', 'zscore'
  
  # Alternative approaches
  alternative_formulations:
    enabled: true
    vibration_thresholds: [4.5, 6.5, 8.5]  # Low, Normal, High, Critical
    operational_thresholds:
      warning: 6.5
      alarm: 8.0
      emergency: 9.5

# Feature Engineering
features:
  # Columns to keep from correlation analysis
  high_corr_features:
    - "CM2_PV_VRM01_DIFF_PRESSURE"
    - "CM2_SP_RB01_SPA_TOTAL_FEED" 
    - "CM2_PV_VRM01_OUT_ PRESS"
    - "CM2_PV_WI01_WATER_INJECTION"
    - "CM2_PV_VRM01_POWER"
    - "CM2_PV_CLA01_SPEED"
    - "CM2_PV_BE01_CURRENT"
    - "CM2_PV_BF01_PRESSURE"
    - "CM2_PV_FN01_POWER"
    - "CM2_PV_VRM01_IN_PRESS"
  
  # Categorical columns
  categorical_columns:
    - "CM2_PV_PRODUCT"
  
  # Lag features configuration
  lag_features:
    columns:
      - "CM2_PV_CLA01_SPEED"
      - "CM2_PV_VRM01_DIFF_PRESSURE"
      - "CM2_PV_WI01_WATER_INJECTION"
    lags: [1, 2, 5, 10]
  
  # Rolling window features
  rolling_features:
    columns:
      - "CM2_PV_CLA01_SPEED"
      - "CM2_PV_VRM01_DIFF_PRESSURE" 
      - "CM2_PV_WI01_WATER_INJECTION"
      - "CM2_PV_VRM01_POWER"
    windows: [5, 10, 30, 60]
    statistics: ["mean", "std", "min", "max"]
  
  # Time-based features
  temporal_features:
    cyclical: true
    hour: true
    day_of_week: true
    day_of_month: false
    month: false
    
  # Advanced features
  spectral_features:
    enabled: false
    fft_components: 10
    
  seasonality_features:
    enabled: false
    periods: [24, 168] # hourly and weekly patterns

# Model Configuration
models:
  # Traditional ML models
  linear_regression:
    enabled: true
    params: {}
  
  random_forest:
    enabled: true
    params:
      n_estimators: [100, 200, 300]
      max_depth: [10, 20, 30]
      min_samples_split: [2, 5, 10]
      max_features: ["sqrt", "log2"]
  
  xgboost:
    enabled: true
    params:
      n_estimators: [500, 1000, 1500]
      learning_rate: [0.01, 0.05, 0.1]
      max_depth: [5, 7, 10]
      subsample: [0.8, 0.9, 1.0]
      colsample_bytree: [0.8, 0.9, 1.0]
  
  # Deep Learning models
  lstm:
    enabled: false
    sequence_length: 60
    params:
      units: [50, 100, 200]
      layers: [1, 2, 3]
      dropout: [0.1, 0.2, 0.3]
      learning_rate: [0.001, 0.01]
      batch_size: [32, 64, 128]
      epochs: 100
      early_stopping_patience: 10
  
  # Ensemble methods
  ensemble:
    enabled: true
    methods: ["voting", "stacking"]
    base_models: ["random_forest", "xgboost", "lstm"]

# Training Configuration
training:
  # Cross-validation
  cv_folds: 5
  cv_method: "time_series_split"
  
  # Hyperparameter optimization
  optimization:
    method: "optuna" # or "grid_search", "random_search"
    n_trials: 20
    scoring: "r2"
  
  # Model selection
  selection_metric: "r2"
  
  # Early stopping
  early_stopping:
    patience: 10
    min_delta: 0.001

# Evaluation Configuration
evaluation:
  metrics:
    - "r2_score"
    - "mean_squared_error"
    - "mean_absolute_error"
    - "mean_absolute_percentage_error"
  
  # Plots to generate
  plots:
    - "prediction_vs_actual"
    - "residuals"
    - "feature_importance"
    - "time_series_decomposition"
    - "error_distribution"

# Logging and Monitoring
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/roller_mill.log"

# MLflow tracking
mlflow:
  enabled: true
  tracking_uri: "sqlite:///experiments/mlflow.db"
  experiment_name: "roller_mill_vibration"
  
# Paths
paths:
  data_raw: "data/raw"
  data_processed: "data/processed" 
  models: "models"
  logs: "logs"
  plots: "plots"
  experiments: "experiments"